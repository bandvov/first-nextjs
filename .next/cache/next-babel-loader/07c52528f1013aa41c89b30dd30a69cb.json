{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\NEXTJS\\\\first-nextjs\\\\components\\\\facet.js\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@material-ui/core';\nimport { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { MainContext } from '../context/mainContext';\nimport { helper } from '../utils';\nexport default function Facet(_ref) {\n  _s();\n\n  var _this = this;\n\n  var data = _ref.data,\n      name = _ref.name;\n\n  var _useContext = useContext(MainContext),\n      state = _useContext.state,\n      send = _useContext.send;\n\n  var _helper = helper(state, send),\n      changeHandler = _helper.changeHandler;\n\n  var mappedOptions = data.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    name: name,\n    select: true,\n    SelectProps: {\n      \"native\": true\n    },\n    placeholder: name,\n    label: name,\n    size: \"small\",\n    fullWidth: true,\n    value: state.context.filter[name],\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return changeHandler(e, name);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), mappedOptions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Facet, \"2iFiwtpEz+gy7mTLQYGnOlA1/bg=\");\n\n_c = Facet;\nFacet.propTypes = {\n  name: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Facet\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/NEXTJS/first-nextjs/components/facet.js"],"names":["TextField","useContext","PropTypes","MainContext","helper","Facet","data","name","state","send","changeHandler","mappedOptions","map","item","context","filter","e","propTypes","string","isRequired","arrayOf","oneOfType","number"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,OAA+B;AAAA;;AAAA;;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,oBACpBN,UAAU,CAACE,WAAD,CADU;AAAA,MACpCK,KADoC,eACpCA,KADoC;AAAA,MAC7BC,IAD6B,eAC7BA,IAD6B;;AAAA,gBAGlBL,MAAM,CAACI,KAAD,EAAQC,IAAR,CAHY;AAAA,MAGpCC,aAHoC,WAGpCA,aAHoC;;AAK5C,MAAMC,aAAa,GAAGL,IAAI,CAACM,GAAL,CAAS,UAACC,IAAD;AAAA,wBAC7B;AAAmB,MAAA,KAAK,EAAEA,IAA1B;AAAA,gBACGA;AADH,OAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,aAD6B;AAAA,GAAT,CAAtB;AAMA,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,WAAW,EAAE;AAAE,gBAAQ;AAAV,KAHf;AAIE,IAAA,WAAW,EAAEA,IAJf;AAKE,IAAA,KAAK,EAAEA,IALT;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,KAAK,EAAEC,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBR,IAArB,CART;AASE,IAAA,OAAO,EAAC,UATV;AAUE,IAAA,QAAQ,EAAE,kBAACS,CAAD;AAAA,aAAON,aAAa,CAACM,CAAD,EAAIT,IAAJ,CAApB;AAAA,KAVZ;AAAA,4BAYE;AAAA;AAAA;AAAA;AAAA,YAZF,EAaGI,aAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5BuBN,K;;KAAAA,K;AA8BxBA,KAAK,CAACY,SAAN,GAAkB;AAChBV,EAAAA,IAAI,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEhBb,EAAAA,IAAI,EAAEJ,SAAS,CAACkB,OAAV,CACJlB,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACoB,MAA7B,CAApB,CADI,EAEJH;AAJc,CAAlB","sourcesContent":["import { TextField } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MainContext } from '../context/mainContext';\r\nimport { helper } from '../utils';\r\n\r\nexport default function Facet({ data, name }) {\r\n  const { state, send } = useContext(MainContext);\r\n\r\n  const { changeHandler } = helper(state, send);\r\n  \r\n  const mappedOptions = data.map((item) => (\r\n    <option key={item} value={item}>\r\n      {item}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <TextField\r\n      name={name}\r\n      select\r\n      SelectProps={{ native: true }}\r\n      placeholder={name}\r\n      label={name}\r\n      size=\"small\"\r\n      fullWidth\r\n      value={state.context.filter[name]}\r\n      variant=\"outlined\"\r\n      onChange={(e) => changeHandler(e, name)}\r\n    >\r\n      <option />\r\n      {mappedOptions}\r\n    </TextField>\r\n  );\r\n}\r\n\r\nFacet.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n  ).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}