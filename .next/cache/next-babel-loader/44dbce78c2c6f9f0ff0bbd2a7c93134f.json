{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card } from '@material-ui/core';\nimport { useContext, useEffect } from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Filters from '../components/filters';\nimport { CarListItem } from '../components/car-list-item/car-list-item';\nimport MainLayout from '../components/main-layout';\nimport styles from '../styles/Home.module.css';\nimport { getFilteredCars } from '../operations/car-operations';\nimport { MainContext } from '../context/mainContext';\nimport CustomCircularProgress from '../components/circularProgress/circularProgress';\nimport { helper } from '../utils';\nimport { carsPerPage } from '../configs';\nexport default function Search(_ref) {\n  var _ref$cars = _ref.cars,\n      cars = _ref$cars === void 0 ? [] : _ref$cars,\n      count = _ref.count;\n\n  var _useContext = useContext(MainContext),\n      state = _useContext.state,\n      send = _useContext.send;\n\n  var _helper = helper(state, send),\n      fetchData = _helper.fetchData;\n\n  useEffect(function () {\n    send({\n      type: 'SET_LOADING',\n      loading: false\n    });\n  }, [cars]);\n\n  var setPageHandler = function setPageHandler(e, value) {\n    send({\n      type: 'SET_CURRENT_PAGE',\n      currentPage: value\n    });\n    fetchData();\n  };\n\n  var mapped = cars.map(function (car) {\n    return /*#__PURE__*/_jsx(CarListItem, _objectSpread({}, car), car._id);\n  });\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    children: [/*#__PURE__*/_jsx(Filters, {}), state.context.loading ? /*#__PURE__*/_jsx(CustomCircularProgress, {}) : cars && /*#__PURE__*/_jsx(Card, {\n      className: styles.cars,\n      children: mapped\n    }), /*#__PURE__*/_jsx(Pagination, {\n      style: {\n        marginTop: '1rem'\n      },\n      color: \"primary\",\n      count: Math.round(count / carsPerPage),\n      page: +state.context.currentPage,\n      showFirstButton: true,\n      showLastButton: true,\n      onChange: setPageHandler\n    })]\n  });\n}\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var page, _yield$getFilteredCar, cars, count;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = ctx.query.page;\n            _context.next = 3;\n            return getFilteredCars(ctx.query, (page - 1) * carsPerPage, carsPerPage);\n\n          case 3:\n            _yield$getFilteredCar = _context.sent;\n            cars = _yield$getFilteredCar.cars;\n            count = _yield$getFilteredCar.count;\n            return _context.abrupt(\"return\", {\n              cars: cars,\n              count: count\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}