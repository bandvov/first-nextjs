{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\NEXTJS\\\\first-nextjs\\\\components\\\\facet.js\";\nimport { TextField } from '@material-ui/core';\nimport { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { MainContext } from '../context/mainContext';\nimport { helper } from '../utils';\nexport default function Facet({\n  data,\n  name\n}) {\n  const {\n    state,\n    send\n  } = useContext(MainContext);\n  const {\n    changeHandler\n  } = helper(state, send);\n  const mappedOptions = data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: item,\n    children: item\n  }, item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    name: name,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    placeholder: name,\n    label: name,\n    size: \"small\",\n    fullWidth: true,\n    value: state.context.filter[name],\n    variant: \"outlined\",\n    onChange: e => changeHandler(e, name),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), mappedOptions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\nFacet.propTypes = {\n  name: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/NEXTJS/first-nextjs/components/facet.js"],"names":["TextField","useContext","PropTypes","MainContext","helper","Facet","data","name","state","send","changeHandler","mappedOptions","map","item","native","context","filter","e","propTypes","string","isRequired","arrayOf","oneOfType","number"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAf,EAA+B;AAC5C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBR,UAAU,CAACE,WAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAoBN,MAAM,CAACI,KAAD,EAAQC,IAAR,CAAhC;AAEA,QAAME,aAAa,GAAGL,IAAI,CAACM,GAAL,CAAUC,IAAD,iBAC7B;AAAmB,IAAA,KAAK,EAAEA,IAA1B;AAAA,cACGA;AADH,KAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAMA,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,WAAW,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAHf;AAIE,IAAA,WAAW,EAAEP,IAJf;AAKE,IAAA,KAAK,EAAEA,IALT;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,KAAK,EAAEC,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBT,IAArB,CART;AASE,IAAA,OAAO,EAAC,UATV;AAUE,IAAA,QAAQ,EAAGU,CAAD,IAAOP,aAAa,CAACO,CAAD,EAAIV,IAAJ,CAVhC;AAAA,4BAYE;AAAA;AAAA;AAAA;AAAA,YAZF,EAaGI,aAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;AAEDN,KAAK,CAACa,SAAN,GAAkB;AAChBX,EAAAA,IAAI,EAAEL,SAAS,CAACiB,MAAV,CAAiBC,UADP;AAEhBd,EAAAA,IAAI,EAAEJ,SAAS,CAACmB,OAAV,CACJnB,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACqB,MAA7B,CAApB,CADI,EAEJH;AAJc,CAAlB","sourcesContent":["import { TextField } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MainContext } from '../context/mainContext';\r\nimport { helper } from '../utils';\r\n\r\nexport default function Facet({ data, name }) {\r\n  const { state, send } = useContext(MainContext);\r\n\r\n  const { changeHandler } = helper(state, send);\r\n  \r\n  const mappedOptions = data.map((item) => (\r\n    <option key={item} value={item}>\r\n      {item}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <TextField\r\n      name={name}\r\n      select\r\n      SelectProps={{ native: true }}\r\n      placeholder={name}\r\n      label={name}\r\n      size=\"small\"\r\n      fullWidth\r\n      value={state.context.filter[name]}\r\n      variant=\"outlined\"\r\n      onChange={(e) => changeHandler(e, name)}\r\n    >\r\n      <option />\r\n      {mappedOptions}\r\n    </TextField>\r\n  );\r\n}\r\n\r\nFacet.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n  ).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}