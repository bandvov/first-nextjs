{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\NEXTJS\\\\first-nextjs\\\\pages\\\\car\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useContext, useEffect } from 'react';\nimport MainLayout from '../../components/main-layout';\nimport CarDetails from '../../components/car-details/car-details';\nimport { getCarById, getCarsId } from '../../operations/car-operations';\nimport { MainContext } from '../../context/mainContext';\nimport CustomCircularProgress from '../../components/circularProgress/circularProgress';\nexport default function OneCar(_ref) {\n  _s();\n\n  var _ref$car = _ref.car,\n      car = _ref$car === void 0 ? {} : _ref$car;\n\n  var _useContext = useContext(MainContext),\n      state = _useContext.state,\n      send = _useContext.send;\n\n  useEffect(function () {\n    send({\n      type: 'SET_LOADING',\n      loading: false\n    });\n  }, [car]);\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: state.context.loading ? /*#__PURE__*/_jsxDEV(CustomCircularProgress, {\n      ress: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CarDetails, {\n      car: car\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OneCar, \"iRR++tWnQJCp/LfzoafwGBaN2zM=\");\n\n_c = OneCar;\n\nOneCar.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var car;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('ctx', ctx);\n            _context.next = 3;\n            return getCarById(ctx.query.id);\n\n          case 3:\n            car = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                car: car\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nOneCar.propTypes = {\n  car: PropTypes.shape({\n    brand: PropTypes.string.isRequired,\n    model: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    price: PropTypes.number.isRequired,\n    mileage: PropTypes.number.isRequired,\n    transmission: PropTypes.string.isRequired,\n    externalColor: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OneCar\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/NEXTJS/first-nextjs/pages/car/[id].js"],"names":["PropTypes","useContext","useEffect","MainLayout","CarDetails","getCarById","getCarsId","MainContext","CustomCircularProgress","OneCar","car","state","send","type","loading","context","getInitialProps","ctx","console","log","query","id","props","propTypes","shape","brand","string","isRequired","model","year","number","price","mileage","transmission","externalColor","photo"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,iCAAtC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,sBAAP,MAAmC,oDAAnC;AAEA,eAAe,SAASC,MAAT,OAA8B;AAAA;;AAAA,sBAAZC,GAAY;AAAA,MAAZA,GAAY,yBAAN,EAAM;;AAAA,oBACnBT,UAAU,CAACM,WAAD,CADS;AAAA,MACnCI,KADmC,eACnCA,KADmC;AAAA,MAC5BC,IAD4B,eAC5BA,IAD4B;;AAG3CV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,IAAI,CAAC;AAAEC,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAE;AAAhC,KAAD,CAAJ;AACD,GAFQ,EAEN,CAACJ,GAAD,CAFM,CAAT;AAIA,sBACE,QAAC,UAAD;AAAA,cACGC,KAAK,CAACI,OAAN,CAAcD,OAAd,gBACC,QAAC,sBAAD;AAAwB,MAAA,IAAI;AAA5B;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhBuBD,M;;KAAAA,M;;AAiBxBA,MAAM,CAACO,eAAP;AAAA,uEAAyB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AADuB;AAAA,mBAELZ,UAAU,CAACY,GAAG,CAACG,KAAJ,CAAUC,EAAX,CAFL;;AAAA;AAEjBX,YAAAA,GAFiB;AAAA,6CAIhB;AACLY,cAAAA,KAAK,EAAE;AACLZ,gBAAAA,GAAG,EAAHA;AADK;AADF,aAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAWAD,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,GAAG,EAAEV,SAAS,CAACwB,KAAV,CAAgB;AACnBC,IAAAA,KAAK,EAAEzB,SAAS,CAAC0B,MAAV,CAAiBC,UADL;AAEnBC,IAAAA,KAAK,EAAE5B,SAAS,CAAC0B,MAAV,CAAiBC,UAFL;AAGnBE,IAAAA,IAAI,EAAE7B,SAAS,CAAC8B,MAAV,CAAiBH,UAHJ;AAInBI,IAAAA,KAAK,EAAE/B,SAAS,CAAC8B,MAAV,CAAiBH,UAJL;AAKnBK,IAAAA,OAAO,EAAEhC,SAAS,CAAC8B,MAAV,CAAiBH,UALP;AAMnBM,IAAAA,YAAY,EAAEjC,SAAS,CAAC0B,MAAV,CAAiBC,UANZ;AAOnBO,IAAAA,aAAa,EAAElC,SAAS,CAAC0B,MAAV,CAAiBC,UAPb;AAQnBQ,IAAAA,KAAK,EAAEnC,SAAS,CAAC0B,MAAV,CAAiBC;AARL,GAAhB,EASFA;AAVc,CAAnB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useContext, useEffect } from 'react';\r\nimport MainLayout from '../../components/main-layout';\r\nimport CarDetails from '../../components/car-details/car-details';\r\nimport { getCarById, getCarsId } from '../../operations/car-operations';\r\nimport { MainContext } from '../../context/mainContext';\r\nimport CustomCircularProgress from '../../components/circularProgress/circularProgress';\r\n\r\nexport default function OneCar({ car = {} }) {\r\n  const { state, send } = useContext(MainContext);\r\n\r\n  useEffect(() => {\r\n    send({ type: 'SET_LOADING', loading: false });\r\n  }, [car]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      {state.context.loading ? (\r\n        <CustomCircularProgress ress />\r\n      ) : (\r\n        <CarDetails car={car} />\r\n      )}\r\n    </MainLayout>\r\n  );\r\n}\r\nOneCar.getInitialProps = async (ctx) => {\r\n  console.log('ctx', ctx);\r\n  const car = await getCarById(ctx.query.id);\r\n\r\n  return {\r\n    props: {\r\n      car,\r\n    },\r\n  };\r\n};\r\n\r\nOneCar.propTypes = {\r\n  car: PropTypes.shape({\r\n    brand: PropTypes.string.isRequired,\r\n    model: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    mileage: PropTypes.number.isRequired,\r\n    transmission: PropTypes.string.isRequired,\r\n    externalColor: PropTypes.string.isRequired,\r\n    photo: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}