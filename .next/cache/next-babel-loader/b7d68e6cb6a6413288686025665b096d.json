{"ast":null,"code":"import { useRouter } from 'next/router';\nexport const helper = (state = {}, send) => {\n  const router = useRouter();\n\n  const fetchData = () => {\n    send({\n      type: 'SET_LOADING',\n      loading: true\n    });\n    const filter = {};\n\n    if (state.context.filter.minYear) {\n      filter.minYear = state.context.filter.minYear;\n    }\n\n    if (state.context.filter.maxYear) {\n      filter.maxYear = state.context.filter.maxYear;\n    }\n\n    if (state.context.filter.minPrice) {\n      filter.minPrice = state.context.filter.minPrice;\n    }\n\n    if (state.context.filter.maxPrice) {\n      filter.maxPrice = state.context.filter.maxPrice;\n    }\n\n    if (state.context.filter.brand) {\n      filter.brand = state.context.filter.brand;\n    }\n\n    if (state.context.filter.color) {\n      filter.color = state.context.filter.color;\n    }\n\n    if (state.context.filter.searchText) {\n      filter.searchText = state.context.filter.searchText;\n    }\n\n    if (state.context.currentPage) {\n      filter.page = state.context.currentPage;\n    }\n\n    router.push({\n      pathname: '/search',\n      query: filter\n    });\n    window.scrollTo(0, 0);\n  };\n\n  const changeHandler = (e, filter) => {\n    send({\n      type: `ADD_${filter.toUpperCase()}`,\n      [filter]: e.target.value\n    });\n    send({\n      type: 'SET_CURRENT_PAGE',\n      currentPage: 1\n    });\n    fetchData();\n  };\n\n  return {\n    changeHandler,\n    fetchData\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/NEXTJS/first-nextjs/utils/index.js"],"names":["useRouter","helper","state","send","router","fetchData","type","loading","filter","context","minYear","maxYear","minPrice","maxPrice","brand","color","searchText","currentPage","page","push","pathname","query","window","scrollTo","changeHandler","e","toUpperCase","target","value"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,IAAb,KAAsB;AAC1C,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AACA,QAAMK,SAAS,GAAG,MAAM;AACtBF,IAAAA,IAAI,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAE;AAAhC,KAAD,CAAJ;AACA,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAIN,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBE,OAAzB,EAAkC;AAChCF,MAAAA,MAAM,CAACE,OAAP,GAAiBR,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBE,OAAtC;AACD;;AACD,QAAIR,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBG,OAAzB,EAAkC;AAChCH,MAAAA,MAAM,CAACG,OAAP,GAAiBT,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBG,OAAtC;AACD;;AACD,QAAIT,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBI,QAAzB,EAAmC;AACjCJ,MAAAA,MAAM,CAACI,QAAP,GAAkBV,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBI,QAAvC;AACD;;AACD,QAAIV,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBK,QAAzB,EAAmC;AACjCL,MAAAA,MAAM,CAACK,QAAP,GAAkBX,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBK,QAAvC;AACD;;AACD,QAAIX,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBM,KAAzB,EAAgC;AAC9BN,MAAAA,MAAM,CAACM,KAAP,GAAeZ,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBM,KAApC;AACD;;AACD,QAAIZ,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBO,KAAzB,EAAgC;AAC9BP,MAAAA,MAAM,CAACO,KAAP,GAAeb,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBO,KAApC;AACD;;AACD,QAAIb,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBQ,UAAzB,EAAqC;AACnCR,MAAAA,MAAM,CAACQ,UAAP,GAAoBd,KAAK,CAACO,OAAN,CAAcD,MAAd,CAAqBQ,UAAzC;AACD;;AACD,QAAId,KAAK,CAACO,OAAN,CAAcQ,WAAlB,EAA+B;AAC7BT,MAAAA,MAAM,CAACU,IAAP,GAAchB,KAAK,CAACO,OAAN,CAAcQ,WAA5B;AACD;;AACDb,IAAAA,MAAM,CAACe,IAAP,CAAY;AACVC,MAAAA,QAAQ,EAAE,SADA;AAEVC,MAAAA,KAAK,EAAEb;AAFG,KAAZ;AAIAc,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAhCD;;AAkCA,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAIjB,MAAJ,KAAe;AACnCL,IAAAA,IAAI,CAAC;AACHG,MAAAA,IAAI,EAAG,OAAME,MAAM,CAACkB,WAAP,EAAqB,EAD/B;AAEH,OAAClB,MAAD,GAAUiB,CAAC,CAACE,MAAF,CAASC;AAFhB,KAAD,CAAJ;AAIAzB,IAAAA,IAAI,CAAC;AAAEG,MAAAA,IAAI,EAAE,kBAAR;AAA4BW,MAAAA,WAAW,EAAE;AAAzC,KAAD,CAAJ;AACAZ,IAAAA,SAAS;AACV,GAPD;;AAQA,SAAO;AACLmB,IAAAA,aADK;AAELnB,IAAAA;AAFK,GAAP;AAID,CAhDM","sourcesContent":["import { useRouter } from 'next/router';\r\n\r\nexport const helper = (state = {}, send) => {\r\n  const router = useRouter();\r\n  const fetchData = () => {\r\n    send({ type: 'SET_LOADING', loading: true });\r\n    const filter = {};\r\n    if (state.context.filter.minYear) {\r\n      filter.minYear = state.context.filter.minYear;\r\n    }\r\n    if (state.context.filter.maxYear) {\r\n      filter.maxYear = state.context.filter.maxYear;\r\n    }\r\n    if (state.context.filter.minPrice) {\r\n      filter.minPrice = state.context.filter.minPrice;\r\n    }\r\n    if (state.context.filter.maxPrice) {\r\n      filter.maxPrice = state.context.filter.maxPrice;\r\n    }\r\n    if (state.context.filter.brand) {\r\n      filter.brand = state.context.filter.brand;\r\n    }\r\n    if (state.context.filter.color) {\r\n      filter.color = state.context.filter.color;\r\n    }\r\n    if (state.context.filter.searchText) {\r\n      filter.searchText = state.context.filter.searchText;\r\n    }\r\n    if (state.context.currentPage) {\r\n      filter.page = state.context.currentPage;\r\n    }\r\n    router.push({\r\n      pathname: '/search',\r\n      query: filter,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const changeHandler = (e, filter) => {\r\n    send({\r\n      type: `ADD_${filter.toUpperCase()}`,\r\n      [filter]: e.target.value,\r\n    });\r\n    send({ type: 'SET_CURRENT_PAGE', currentPage: 1 });\r\n    fetchData();\r\n  };\r\n  return {\r\n    changeHandler,\r\n    fetchData,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}