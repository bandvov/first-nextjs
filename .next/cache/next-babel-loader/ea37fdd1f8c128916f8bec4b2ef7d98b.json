{"ast":null,"code":"import { gql } from 'apollo-boost';\nimport { client } from '../utils/client';\nexport const getAllCars = async (skip, limit) => {\n  const res = await client.query({\n    query: gql`\n      query($skip: Int, $limit: Int) {\n        getAllCars(skip: $skip, limit: $limit) {\n          cars {\n            _id\n            brand\n            model\n            photo\n            price\n            year\n            mileage\n          }\n          count\n        }\n      }\n    `,\n    variables: {\n      skip,\n      limit\n    }\n  });\n  client.resetStore();\n  return res.data.getAllCars;\n};\nexport const getCarsId = async () => {\n  const res = await client.query({\n    query: gql`\n      query {\n        getAllCars {\n          cars {\n            _id\n          }\n        }\n      }\n    `,\n    fetchPolicy: 'no-cache'\n  });\n  client.resetStore();\n  return res.data.getAllCars.cars;\n};\nexport const getCarById = async id => {\n  const res = await client.query({\n    query: gql`\n      query($id: ID!) {\n        getCarById(id: $id) {\n          _id\n          brand\n          model\n          category\n          date\n          price\n          year\n          mileage\n          transmission\n          externalColor\n          photo\n          engine\n          colorSimpleName\n          description\n        }\n      }\n    `,\n    variables: {\n      id\n    }\n  });\n  return res.data.getCarById;\n};\nexport const addCar = async car => {\n  car.price = +car.price;\n  car.year = +car.year;\n  car.mileage = +car.mileage;\n  const res = await client.mutate({\n    mutation: gql`\n      mutation($car: CarInput!) {\n        addCar(car: $car) {\n          _id\n        }\n      }\n    `,\n    variables: {\n      car\n    }\n  });\n  return res.data.addCar;\n};\nexport const updateCar = async ({\n  id,\n  car\n}) => {\n  car.price = +car.price;\n  car.year = +car.year;\n  car.mileage = +car.mileage;\n  const res = await client.mutate({\n    mutation: gql`\n      mutation($id: ID!, $car: CarInput!) {\n        updateCar(id: $id, car: $car) {\n          _id\n        }\n      }\n    `,\n    variables: {\n      id,\n      car\n    }\n  });\n  return res.data.updateCar;\n};\nexport const deleteCar = async id => {\n  const res = await client.mutate({\n    mutation: gql`\n      mutation($id: ID!) {\n        deleteCar(id: $id) {\n          _id\n        }\n      }\n    `,\n    variables: {\n      id\n    }\n  });\n  return res.data.deleteCar;\n};\nexport const getFilteredCars = async (filter, skip, limit) => {\n  const res = await client.query({\n    query: gql`\n      query($filter: FilterInput, $skip: Int, $limit: Int) {\n        getFilteredCars(filter: $filter, skip: $skip, limit: $limit) {\n          cars {\n            _id\n            brand\n            model\n            photo\n            price\n            year\n            mileage\n          }\n          count\n        }\n      }\n    `,\n    variables: {\n      filter,\n      skip,\n      limit\n    }\n  });\n  return {\n    cars: res.data.getFilteredCars.cars,\n    count: res.data.getFilteredCars.count\n  };\n};","map":null,"metadata":{},"sourceType":"module"}