{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\VS Code project\\\\NEXTJS\\\\first-nextjs\\\\pages\\\\search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { useContext, useEffect } from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Filters from '../components/filters';\nimport { CarListItem } from '../components/car-list-item/car-list-item';\nimport MainLayout from '../components/main-layout';\nimport styles from '../styles/Home.module.css';\nimport { getFilteredCars } from '../operations/car-operations';\nimport { MainContext } from '../context/mainContext';\nimport CustomCircularProgress from '../components/circularProgress/circularProgress';\nimport { helper } from '../utils';\nimport { carsPerPage } from '../configs';\nexport default function Search({\n  cars = [],\n  count\n}) {\n  const {\n    state,\n    send\n  } = useContext(MainContext);\n  const {\n    fetchData\n  } = helper(state, send);\n  useEffect(() => {\n    send({\n      type: 'SET_LOADING',\n      loading: false\n    });\n  }, [cars]);\n\n  const setPageHandler = (e, value) => {\n    send({\n      type: 'SET_CURRENT_PAGE',\n      currentPage: value\n    });\n    fetchData();\n  };\n\n  const mapped = cars.map(car => /*#__PURE__*/_jsxDEV(CarListItem, _objectSpread({}, car), car._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 36\n  }, this));\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), state.context.loading ? /*#__PURE__*/_jsxDEV(CustomCircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : cars && /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.cars,\n      children: mapped\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      style: {\n        marginTop: '1rem'\n      },\n      color: \"primary\",\n      count: Math.round(count / carsPerPage),\n      page: +state.context.currentPage,\n      showFirstButton: true,\n      showLastButton: true,\n      onChange: setPageHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\nSearch.getInitialProps = async ctx => {\n  const {\n    page\n  } = ctx.query;\n  const {\n    cars,\n    count\n  } = await getFilteredCars(ctx.query, (page - 1) * carsPerPage, carsPerPage);\n  return {\n    cars,\n    count\n  };\n};\n\nSearch.propTypes = PropTypes.shape({\n  cars: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    brand: PropTypes.string.isRequired,\n    mileage: PropTypes.number.isRequired,\n    model: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired\n  }).isRequired).isRequired\n}).isRequired;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/NEXTJS/first-nextjs/pages/search.js"],"names":["Card","PropTypes","useContext","useEffect","Pagination","Filters","CarListItem","MainLayout","styles","getFilteredCars","MainContext","CustomCircularProgress","helper","carsPerPage","Search","cars","count","state","send","fetchData","type","loading","setPageHandler","e","value","currentPage","mapped","map","car","_id","context","marginTop","Math","round","getInitialProps","ctx","page","query","propTypes","shape","arrayOf","string","isRequired","brand","mileage","number","model","photo","price","year"],"mappings":"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","sourcesContent":["import { Card } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { useContext, useEffect } from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Filters from '../components/filters';\r\nimport { CarListItem } from '../components/car-list-item/car-list-item';\r\nimport MainLayout from '../components/main-layout';\r\nimport styles from '../styles/Home.module.css';\r\nimport { getFilteredCars } from '../operations/car-operations';\r\nimport { MainContext } from '../context/mainContext';\r\nimport CustomCircularProgress from '../components/circularProgress/circularProgress';\r\nimport { helper } from '../utils';\r\nimport { carsPerPage } from '../configs';\r\n\r\nexport default function Search({ cars = [], count }) {\r\n  const { state, send } = useContext(MainContext);\r\n\r\n  const { fetchData } = helper(state, send);\r\n\r\n  useEffect(() => {\r\n    send({ type: 'SET_LOADING', loading: false });\r\n  }, [cars]);\r\n\r\n  const setPageHandler = (e, value) => {\r\n    send({ type: 'SET_CURRENT_PAGE', currentPage: value });\r\n    fetchData();\r\n  };\r\n  const mapped = cars.map((car) => <CarListItem key={car._id} {...car} />);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Filters />\r\n      {state.context.loading ? (\r\n        <CustomCircularProgress />\r\n      ) : (\r\n        cars && <Card className={styles.cars}>{mapped}</Card>\r\n      )}\r\n\r\n      <Pagination\r\n        style={{ marginTop: '1rem' }}\r\n        color=\"primary\"\r\n        count={Math.round(count / carsPerPage)}\r\n        page={+state.context.currentPage}\r\n        showFirstButton\r\n        showLastButton\r\n        onChange={setPageHandler}\r\n      />\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nSearch.getInitialProps = async (ctx) => {\r\n  const { page } = ctx.query;\r\n  const { cars, count } = await getFilteredCars(\r\n    ctx.query,\r\n    (page - 1) * carsPerPage,\r\n    carsPerPage\r\n  );\r\n\r\n  return {\r\n    cars,\r\n    count,\r\n  };\r\n};\r\n\r\nSearch.propTypes = PropTypes.shape({\r\n  cars: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n      brand: PropTypes.string.isRequired,\r\n      mileage: PropTypes.number.isRequired,\r\n      model: PropTypes.string.isRequired,\r\n      photo: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n      year: PropTypes.number.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n}).isRequired;\r\n"]},"metadata":{},"sourceType":"module"}