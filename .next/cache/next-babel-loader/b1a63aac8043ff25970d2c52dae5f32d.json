{"ast":null,"code":"import carsServices from './cars.services';\nconst carsQuery = {\n  getAllCars: async (_, args) => await carsServices.getAllCars(args),\n  getCarById: async (_, args) => {\n    try {\n      return await carsServices.getCarById(args);\n    } catch (e) {\n      return {\n        message: e.message\n      };\n    }\n  },\n  getFilteredCars: async (_, args) => await carsServices.getFilteredCars(args)\n};\nconst carsMutation = {\n  addCar: async (parent, args) => await carsServices.addCar(args),\n  updateCar: async (_, args) => await carsServices.updateCar(args),\n  deleteCar: async (_, args) => await carsServices.deleteCar(args)\n};\nexport { carsQuery, carsMutation };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/VS Code project/NEXTJS/first-nextjs/modules/cars.resolvers.js"],"names":["carsServices","carsQuery","getAllCars","_","args","getCarById","e","message","getFilteredCars","carsMutation","addCar","parent","updateCar","deleteCar"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,OAAOC,CAAP,EAAUC,IAAV,KAAmB,MAAMJ,YAAY,CAACE,UAAb,CAAwBE,IAAxB,CADrB;AAEhBC,EAAAA,UAAU,EAAE,OAAOF,CAAP,EAAUC,IAAV,KAAmB;AAC7B,QAAI;AACF,aAAO,MAAMJ,YAAY,CAACK,UAAb,CAAwBD,IAAxB,CAAb;AACD,KAFD,CAEE,OAAOE,CAAP,EAAU;AACV,aAAO;AAAEC,QAAAA,OAAO,EAAED,CAAC,CAACC;AAAb,OAAP;AACD;AACF,GARe;AAShBC,EAAAA,eAAe,EAAE,OAAOL,CAAP,EAAUC,IAAV,KAAmB,MAAMJ,YAAY,CAACQ,eAAb,CAA6BJ,IAA7B;AAT1B,CAAlB;AAWA,MAAMK,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,OAAOC,MAAP,EAAeP,IAAf,KAAwB,MAAMJ,YAAY,CAACU,MAAb,CAAoBN,IAApB,CADnB;AAEnBQ,EAAAA,SAAS,EAAE,OAAOT,CAAP,EAAUC,IAAV,KAAmB,MAAMJ,YAAY,CAACY,SAAb,CAAuBR,IAAvB,CAFjB;AAGnBS,EAAAA,SAAS,EAAE,OAAOV,CAAP,EAAUC,IAAV,KAAmB,MAAMJ,YAAY,CAACa,SAAb,CAAuBT,IAAvB;AAHjB,CAArB;AAMA,SAASH,SAAT,EAAoBQ,YAApB","sourcesContent":["import carsServices from './cars.services';\n\nconst carsQuery = {\n  getAllCars: async (_, args) => await carsServices.getAllCars(args),\n  getCarById: async (_, args) => {\n    try {\n      return await carsServices.getCarById(args);\n    } catch (e) {\n      return { message: e.message };\n    }\n  },\n  getFilteredCars: async (_, args) => await carsServices.getFilteredCars(args),\n};\nconst carsMutation = {\n  addCar: async (parent, args) => await carsServices.addCar(args),\n  updateCar: async (_, args) => await carsServices.updateCar(args),\n  deleteCar: async (_, args) => await carsServices.deleteCar(args),\n};\n\nexport { carsQuery, carsMutation };\n"]},"metadata":{},"sourceType":"module"}