{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card } from '@material-ui/core';\nimport { useContext, useEffect } from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Filters from '../components/filters';\nimport { CarListItem } from '../components/car-list-item/car-list-item';\nimport MainLayout from '../components/main-layout';\nimport styles from '../styles/Home.module.css';\nimport { getFilteredCars } from '../operations/car-operations';\nimport { MainContext } from '../context/mainContext';\nimport CustomCircularProgress from '../components/circularProgress/circularProgress';\nimport { helper } from '../utils';\nimport { carsPerPage } from '../configs';\nexport default function Search({\n  cars = [],\n  count\n}) {\n  const {\n    state,\n    send\n  } = useContext(MainContext);\n  const {\n    fetchData\n  } = helper(state, send);\n  useEffect(() => {\n    send({\n      type: 'SET_LOADING',\n      loading: false\n    });\n  }, [cars]);\n\n  const setPageHandler = (e, value) => {\n    send({\n      type: 'SET_CURRENT_PAGE',\n      currentPage: value\n    });\n    fetchData();\n  };\n\n  const mapped = cars.map(car => /*#__PURE__*/_jsx(CarListItem, _objectSpread({}, car), car._id));\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    children: [/*#__PURE__*/_jsx(Filters, {}), state.context.loading ? /*#__PURE__*/_jsx(CustomCircularProgress, {}) : cars && /*#__PURE__*/_jsx(Card, {\n      className: styles.cars,\n      children: mapped\n    }), /*#__PURE__*/_jsx(Pagination, {\n      style: {\n        marginTop: '1rem'\n      },\n      color: \"primary\",\n      count: Math.round(count / carsPerPage),\n      page: +state.context.currentPage,\n      showFirstButton: true,\n      showLastButton: true,\n      onChange: setPageHandler\n    })]\n  });\n}\n\nSearch.getInitialProps = async ctx => {\n  const {\n    page\n  } = ctx.query;\n  const {\n    cars,\n    count\n  } = await getFilteredCars(ctx.query, (page - 1) * carsPerPage, carsPerPage);\n  return {\n    cars,\n    count\n  };\n};","map":null,"metadata":{},"sourceType":"module"}