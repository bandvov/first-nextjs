{"ast":null,"code":"import Cars from './cars.model';\n\nclass CarsServices {\n  async getAllCars({\n    skip,\n    limit\n  }) {\n    const cars = await Cars.find().skip(skip).limit(limit).sort({\n      year: -1\n    });\n    const count = await Cars.countDocuments();\n    return {\n      cars,\n      count\n    };\n  }\n\n  async getCarById({\n    id\n  }) {\n    const car = await Cars.findById(id);\n\n    if (!car) {\n      throw new Error('car not found');\n    }\n\n    return car;\n  }\n\n  async addCar({\n    car\n  }) {\n    return await new Cars(car).save();\n  }\n\n  updateCar({\n    id,\n    car\n  }) {\n    return Cars.findByIdAndUpdate(id, {\n      $set: car\n    }, {\n      new: true\n    });\n  }\n\n  deleteCar({\n    id\n  }) {\n    return Cars.findByIdAndDelete(id);\n  }\n\n  async getFilteredCars({\n    filter,\n    skip,\n    limit\n  }) {\n    const filters = this.configureFilter(filter);\n    const cars = await Cars.find(filters).skip(skip).limit(limit);\n    const count = await Cars.find(filters).countDocuments();\n    return {\n      cars,\n      count\n    };\n  }\n\n  configureFilter(data) {\n    const filter = {};\n    const {\n      brand = '',\n      model = '',\n      minYear = 1990,\n      maxYear = 2022,\n      minPrice = 0,\n      maxPrice = 222222,\n      color = '',\n      searchText = ''\n    } = data;\n\n    if (brand) {\n      filter.brand = new RegExp(brand, 'i');\n    }\n\n    if (model) {\n      filter.model = new RegExp(model, 'i');\n    }\n\n    if (minPrice) {\n      filter.price = {\n        $gte: +minPrice,\n        $lte: minPrice\n      };\n    }\n\n    if (maxPrice) {\n      filter.price = {\n        $gte: minPrice,\n        $lte: +maxPrice\n      };\n    }\n\n    if (minYear) {\n      filter.year = {\n        $gte: +minYear,\n        $lte: +maxYear\n      };\n    }\n\n    if (maxYear) {\n      filter.year = {\n        $gte: +minYear,\n        $lte: +maxYear\n      };\n    }\n\n    if (color) {\n      filter.colorSimpleName = new RegExp(color, 'i');\n    }\n\n    if (searchText) {\n      filter.description = new RegExp(searchText, 'i');\n    }\n\n    return filter;\n  }\n\n}\n\nexport default new CarsServices();","map":null,"metadata":{},"sourceType":"module"}