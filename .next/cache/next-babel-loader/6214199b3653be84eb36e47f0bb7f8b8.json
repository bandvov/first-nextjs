{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useEffect } from 'react';\nimport MainLayout from '../../components/main-layout';\nimport CarDetails from '../../components/car-details/car-details';\nimport { getCarById, getCarsId } from '../../operations/car-operations';\nimport { MainContext } from '../../context/mainContext';\nimport CustomCircularProgress from '../../components/circularProgress/circularProgress';\nexport default function OneCar({\n  car = {}\n}) {\n  const {\n    state,\n    send\n  } = useContext(MainContext);\n  useEffect(() => {\n    send({\n      type: 'SET_LOADING',\n      loading: false\n    });\n  }, [car]);\n  return /*#__PURE__*/_jsx(MainLayout, {\n    children: state.context.loading ? /*#__PURE__*/_jsx(CustomCircularProgress, {\n      ress: true\n    }) : /*#__PURE__*/_jsx(CarDetails, {\n      car: car\n    })\n  });\n}\nexport async function getStaticProps(ctx) {\n  const car = await getCarById(ctx.params.id);\n  return {\n    props: {\n      car\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const cars = await getCarsId();\n  return {\n    paths: cars.map(car => ({\n      params: {\n        id: car._id\n      }\n    })),\n    fallback: false\n  };\n}","map":null,"metadata":{},"sourceType":"module"}